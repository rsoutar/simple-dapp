import Head from 'next/head'
import Image from 'next/image'
import { useState } from 'react'
import { ethers } from 'ethers'
import styles from '../styles/Home.module.css'
import Greeter from '../artifacts/contracts/Greeter.sol/Greeter.json'
import Token from '../artifacts/contracts/Token.sol/Token.json'

const greeterAddress = "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0"
const tokenAddress = "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82"

export default function Home() {
  const [greeting, setGreetingValue] = useState('')
  const [userAccount, setUserAccount] = useState('')
  const [amount, setAmount] = useState(0)

  async function requestAccount() {
    await window.ethereum.request({method: 'eth_requestAccounts' });
  }

  async function getBalance() {
    if (typeof window.ethereum != 'undefined') {
      const [account] = await window.ethereum.request({method: 'eth_requestAccounts' });
      const provider = new ethers.providers.Web3Provider(window.ethereum);
      const contract = new ethers.Contract(tokenAddress, Token.abi, provider);
      const balance = await contract.balanceOf(account);
      console.log("Balance: ", balance.toString());
    }
  }

  async function sendToken() {
    if (typeof window.ethereum != 'undefined') {
      await requestAccount();
      const provider = new ethers.providers.Web3Provider(window.ethereum);
      const signer = provider.getSigner();
      const contract = new ethers.Contract(tokenAddress, Token.abi, signer);
      const transaction = await contract.transfer(userAccount, amount);
      await transaction.wait();
      console.log(`${amount} tokens send to ${userAccount}`);
    }
  }

  async function fetchGreeting() {
    if (typeof window.ethereum !== 'undefined') {
      const provider = new ethers.providers.Web3Provider(window.ethereum)
      const contract = new ethers.Contract(greeterAddress, Greeter.abi, provider)
      try {
        const data = await contract.greet()
        console.log('data: ', data)
      } catch (error) {
        console.log("Error: ", err)
      }
    }
  }

  async function setGreeting() {
    if (!greeting) return
    if (typeof window.ethereum !== 'undefined') {
      await requestAccount()
      const provider = new ethers.providers.Web3Provider(window.ethereum);
      const signer = provider.getSigner();
      const contract = new ethers.Contract(greeterAddress, Greeter.abi, signer)
      const transaction = await contract.setGreeting(greeting)
      setGreetingValue('')
      await transaction.wait()
      fetchGreeting()
    }
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <button onClick={fetchGreeting}>Fetch Greeting</button>
      <button onClick={setGreeting}>Set Greeting</button>
      <input type="text" onChange={(e) => setGreetingValue(e.target.value)} placeholder='Set Greeting' value={greeting}/>
      <br />
      <button onClick={getBalance}>Get Balance</button>
      <button onClick={sendToken}>Send Token</button>
      <input onChange={e => setUserAccount(e.target.value)} placeholder='User Account' />
      <input onChange={e => setAmount(e.target.value)} placeholder='Amount' />
    </div>
  )
}
